(()=>{var e={790:(e,s,t)=>{const a=t(860),r=t(0),o=t(710),i=t(17);e.exports=(new class{constructor(){this.app=a(),this.middlewares()}middlewares(){this.app.use(o()),this.app.use(a.json()),this.app.use(a.static(i.join(__dirname,"public"))),this.app.use(r),this.app.set("view engine","ejs"),this.app.set("views",i.resolve(__dirname,"./views"))}}).app},613:(e,s,t)=>{const{StatusCodes:a}=t(10),r=t(818),o=t(647),i=t(741);t(860),e.exports=new class{async register(e,s){const{email:t,password:n}=e.body;await r.isUserReg(t)?s.status(a.OK).json(o.userRegistered):await r.registerUser(t,n)?await i.sendMail()?s.status(a.OK).json(o.registered):s.status(a.OK).json(o.emailServer):s.status(a.OK).json(o.serverProblem)}async validate(e,s,t){await r.validateUser(e.params,e.query.email)?s.send("<h1>E-mail validado com sucesso!!!</h1>"):s.status(a.FORBIDDEN).json(o.invalidLink)}async authenticate(e,s,t){if(Object.keys(e.body).length)if(await r.checkUser(e.body))if(r.isValidTrue()){const t=await r.generateToken(e.headers.authorization);s.cookie("authorization",t,{httpOnly:!0,maxAge:3e4}).status(a.OK).json(o.logged)}else s.clearCookie().status(a.OK).json(o.notValidated);else s.clearCookie().status(a.OK).json(o.invalidCredentials);else await r.verifyToken(e.cookies.authorization)?s.status(a.OK).json(o.logged):s.status(a.OK).json(o.notLogged)}async forgotPass(e,s){await r.isUserReg(e.body.email)?(r.recoverAccount(),await i.sendMail()?s.status(a.OK).json(o.redefined):s.status(a.OK).json(o.emailServer)):s.status(a.OK).json(o.notValidated)}async getResetPass(e,s){const t=await r.validateUserPass(e.params,e.query.email);console.log(e.params),console.log(e.query),t?(s.cookie("uuid",e.params.uuid,{maxAge:6e4}),s.cookie("email",e.query.email,{maxAge:6e4}),s.status(a.OK).redirect("/reset")):(console.log("aqui"),s.status(a.FORBIDDEN).json(o.invalidLink))}async reset(e,s){const{uuid:t,email:a}=e.cookies,{password:i,password2:n}=e.body;i===n&&0!==i.length&&0!==n?void 0!==t&&void 0!==a?r.updatePass(i,a)?(console.log("updated"),s.clearCookie(),s.json(o.passUpdated)):(console.log("is not updated"),s.json(o.serverProblem)):(console.log("email undefined"),s.json(o.timeExpired)):s.json(o.emptyPasses)}}},24:(e,s,t)=>{t(142).config(),e.exports={development:{username:process.env.DB_USERNAME,password:process.env.PASSWORD,database:process.env.DATABASE,host:process.env.HOST,dialect:"postgres",logging:!1,dialectOptions:{ssl:{require:!0,rejectUnauthorized:!1}}},production:{username:process.env.DB_USERNAME,password:process.env.PASSWORD,database:process.env.DATABASE,host:process.env.HOST,dialect:"postgres",logging:!1,dialectOptions:{ssl:{require:!0,rejectUnauthorized:!1}}}}},44:(e,s,t)=>{"use strict";const a=t(147),r=t(17),o=t(496),i=r.basename(__filename),n=t(24).production,c={};let d;d=n.use_env_variable?new o(process.env[n.use_env_variable],n):new o(n.database,n.username,n.password,n),a.readdirSync(__dirname).filter((e=>0!==e.indexOf(".")&&e!==i&&".js"===e.slice(-3))).forEach((e=>{const s=t(524)(r.join(__dirname,e))(d,o.DataTypes);c[s.name]=s})),Object.keys(c).forEach((e=>{c[e].associate&&c[e].associate(c)})),c.sequelize=d,e.exports=c},0:(e,s,t)=>{const{Router:a}=t(860),r=a(),{StatusCodes:o}=t(10),i=(t(24),t(613));r.post("/register",i.register),r.post("/forgot",i.forgotPass),r.post("/reset",i.reset),r.get("/checking/:uuid",i.validate),r.get("/recover/:uuid",i.getResetPass),r.post("/login",i.authenticate),r.get("/",((e,s)=>s.status(o.OK).render("login"))),r.get("/register",((e,s)=>s.render("login"))),r.get("/forgot",((e,s)=>s.render("login"))),r.get("/reset",((e,s)=>s.render("login"))),r.get("/teste",((e,s)=>{console.log(process.env),s.status(200)})),r.get("*",((e,s)=>s.render("login"))),e.exports=r},302:(e,s,t)=>{const{user:a}=t(44);e.exports=new class{async getByEmail(e){try{return await a.findOne({where:{email:e}})||!1}catch(e){console.log(e)}}async create(e,s){try{return await a.create({email:e,password_hash:s})}catch(e){console.log(e)}}async validate(e){try{return await e.update({validated:!0})}catch(e){console.log(e)}}async updatePass(e,s){try{return await e.update({password_hash:s})}catch(e){console.log(e)}}}},647:e=>{e.exports={notLogged:{cod:"0"},userRegistered:{cod:"1",msg:"User alredy registered, try to reset the password!"},serverProblem:{cod:"2",msg:"Sorry! We have problems in the server! Try again later."},emailServer:{cod:"3",msg:"Sorry! We have problems to send e-mail confirmation."},invalidLink:{cod:"4",msg:"Invalid link, please proceed to register."},invalidCredentials:{cod:"5",msg:"Invalid user or password."},notValidated:{cod:"6",msg:"User not validated."},logged:{cod:"7",msg:"Session valid."},logged:{cod:"8",msg:"You`re logged in.",logged:!0},registered:{cod:"9",msg:"To validate your account, check your e-mail folder and click in the link sent."},redefined:{cod:"10",msg:"To redefine your password, check your e-mail folder and click in the link sent."},newPass:{cod:"11"},emptyPasses:{cod:"12",msg:"Passwords field must be filled and the same"},timeExpired:{cod:"13",msg:"Time expired, please redefine your password again"},passUpdated:{cod:"14",msg:"Password updated successfully"}}},741:(e,s,t)=>{t(142).config();const a=t(139);e.exports=new class{constructor(){this.sgMail=a.setApiKey(process.env.EMAIL_PASS),this.msg="",this.title=["Contes Store - E-mail validation","Contes Store - Reset your password"]}setMsgInfo(e,s,t,a){let r="";r="checking"===t?"Clique aqui para validar seu email":"Clique aqui para redefinir a sua senha",this.msg={to:s,from:"contes.dev@hotmail.com",subject:this.title[a],html:`<a href="https://contes-loginpage.herokuapp.com/${t}/${e}?email=${s}">${r}</a>`}}sendMail(){return this.sgMail.send(this.msg).then((()=>(console.log("Email sent"),!0))).catch((e=>(console.log(e),!1)))}printMsg(){console.log(this.msg)}}},818:(e,s,t)=>{const a=t(302),r=t(432),o=t(741),i=t(344);e.exports=new class{constructor(){this.user="",this.secretKey=process.env.SECRET_KEY}async checkUser({email:e,password:s}){if(e&&s){const t=await this.isUserReg(e),a=await this.isPassCorrect(s);return!(!t||!a)}return!1}async generateToken(e){const{uuid:s,email:t}=this.user.dataValues,a={user:{uuid:s,email:t}};return i.sign(a,this.secretKey,{expiresIn:"30s"})}async verifyToken(e){try{return i.verify(e,this.secretKey),!0}catch(e){return console.log(e),!1}}async registerUser(e,s){const t=await this.getHashPass(s),r=await a.create(e,t);return!!r&&(o.setMsgInfo(r.dataValues.uuid,e,"checking",0),!0)}async recoverAccount(){return o.setMsgInfo(this.user.dataValues.uuid,this.user.dataValues.email,"recover",1),!0}async validateUser(e,s){try{const t=await this.isUserReg(s),a=this.isUUIDCorrect(e),r=this.isValidTrue();return!(!a||!t||r)&&!!this.updateValidUser()}catch(e){console.log(e)}}async validateUserPass(e,s){try{const t=await this.isUserReg(s),a=this.isUUIDCorrect(e),r=this.isValidTrue();return!!(a&&t&&r)}catch(e){console.log(e)}}async updateValidUser(){return!!await a.validate(this.user)}async updatePass(e,s){if(await this.isUserReg(s)){const s=await this.getHashPass(e);return!!await a.updatePass(this.user,s)}return!1}async getHashPass(e){return await r.hash(e,10)}async isUserReg(e){return this.user=await a.getByEmail(e),!!this.user}isUUIDCorrect({uuid:e}){return this.user.dataValues.uuid===e}async isPassCorrect(e){try{return await r.compare(e,this.user.dataValues.password_hash)}catch(e){return console.log(e),!1}}isValidTrue(){return!!this.user.dataValues.validated}}},524:e=>{function s(e){var s=new Error("Cannot find module '"+e+"'");throw s.code="MODULE_NOT_FOUND",s}s.keys=()=>[],s.resolve=s,s.id=524,e.exports=s},139:e=>{"use strict";e.exports=require("@sendgrid/mail")},432:e=>{"use strict";e.exports=require("bcryptjs")},710:e=>{"use strict";e.exports=require("cookie-parser")},142:e=>{"use strict";e.exports=require("dotenv")},860:e=>{"use strict";e.exports=require("express")},10:e=>{"use strict";e.exports=require("http-status-codes")},344:e=>{"use strict";e.exports=require("jsonwebtoken")},496:e=>{"use strict";e.exports=require("sequelize")},147:e=>{"use strict";e.exports=require("fs")},17:e=>{"use strict";e.exports=require("path")}},s={};function t(a){var r=s[a];if(void 0!==r)return r.exports;var o=s[a]={exports:{}};return e[a](o,o.exports,t),o.exports}t.o=(e,s)=>Object.prototype.hasOwnProperty.call(e,s),(()=>{const e=t(790),{sequelize:s}=t(44),a=process.env.PORT||8080;e.listen(a,(async()=>{console.log(`Server listening at port:${a}`),await s.authenticate(),console.log("Database connected!")}))})()})();