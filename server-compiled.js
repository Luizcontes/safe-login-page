(()=>{var e={790:(e,s,t)=>{const r=t(860),a=t(0),i=t(710),o=t(17);e.exports=(new class{constructor(){this.app=r(),this.middlewares()}middlewares(){this.app.use(r.json()),this.app.use(a),this.app.use(i()),this.app.use(r.static(o.join(__dirname,"public"))),this.app.set("view engine","ejs"),this.app.set("views",o.resolve(__dirname,"./views"))}}).app},613:(e,s,t)=>{const{StatusCodes:r}=t(10),a=t(818),i=t(647),o=t(741);e.exports=new class{async register(e,s){const{email:t,password:n}=e.body;await a.isUserReg(t)?s.status(r.BAD_REQUEST).json(i.userRegistered):await a.registerUser(t,n)?await o.sendMail()?s.status(r.OK).json(i.registered):s.status(r.INTERNAL_SERVER_ERROR).json(i.emailServer):s.status(r.INTERNAL_SERVER_ERROR).json(i.serverProblem)}async validate(e,s,t){await a.validateUser(e.params,e.query.email)?s.send("<h1>E-mail validado com sucesso!!!</h1>"):s.status(r.FORBIDDEN).json(i.emailServer)}async authenticate(e,s){if(e.auth)return s.status(r.OK).json(i.logged);await a.checkUser(e.body)?a.isValidTrue()?(await a.generateToken(e.headers.authorization),console.log(e),s.clearCookie().status(r.OK).json(i.logged).send()):s.status(r.FORBIDDEN).json(i.notValidated):s.status(r.BAD_REQUEST).json(i.invalidCredentials)}async update(e,s){}}},44:(e,s,t)=>{"use strict";const r=t(147),a=t(17),i=t(496),o=a.basename(__filename),n=t(986).production,c={};let u;u=n.use_env_variable?new i(process.env[n.use_env_variable],n):new i(n.database,n.username,n.password,n),r.readdirSync(__dirname).filter((e=>0!==e.indexOf(".")&&e!==o&&".js"===e.slice(-3))).forEach((e=>{const s=t(524)(a.join(__dirname,e))(u,i.DataTypes);c[s.name]=s})),Object.keys(c).forEach((e=>{c[e].associate&&c[e].associate(c)})),c.sequelize=u,e.exports=c},226:(e,s,t)=>{const r=t(818),{StatusCodes:a}=t(10);t(647),e.exports=async function(e,s,t){e.headers.authorization&&await r.verifyToken(e.headers.authorization.slice(7))?(e.auth=!0,t()):t()}},0:(e,s,t)=>{const{Router:r}=t(860),a=r(),{StatusCodes:i}=t(10),o=t(226),n=t(613);a.post("/register",n.register),a.get("/checking/:uuid",n.validate),a.use(o),a.post("/login",n.authenticate),a.get("/",((e,s)=>s.status(i.OK).render("login"))),a.get("/register",((e,s)=>s.render("login"))),a.get("/forgot",((e,s)=>s.render("login"))),e.exports=a},302:(e,s,t)=>{const{user:r}=t(44);e.exports=new class{async getByEmail(e){try{return await r.findOne({where:{email:e}})||!1}catch(e){console.log(e)}}async create(e,s){try{return await r.create({email:e,password_hash:s})}catch(e){console.log(e)}}async validate(e){try{return await e.update({validated:!0})}catch(e){console.log(e)}}}},647:e=>{e.exports={userRegistered:{cod:"1",msg:"User alredy registered, try to reset the password!"},serverProblem:{cod:"2",msg:"Sorry! We have problems in the server! Try again later."},emailServer:{cod:"3",msg:"Sorry! We have problems to send e-mail confirmation."},emailServer:{cod:"4",msg:"Invalid link, please proceed to register."},invalidCredentials:{cod:"5",msg:"Invalid user or password."},notValidated:{cod:"6",msg:"User not validated."},logged:{cod:"7",msg:"Session valid."},logged:{cod:"8",msg:"You`re logged in."},registered:{cod:"9",msg:"To validate your account, check your e-mail folder and click in the link sent."}}},741:(e,s,t)=>{t(142).config();const r=t(139);e.exports=new class{constructor(){this.sgMail=r.setApiKey(process.env.EMAIL_PASS),this.msg=""}setMsgInfo(e,s){this.msg={to:s,from:"contes.dev@hotmail.com",subject:"Contes Store - E-mail validation",html:`<a href="http://localhost:8080/checking/${e}?email=${s}">Clique aqui para validar seu email</a>`}}sendMail(){return this.sgMail.send(this.msg).then((()=>(console.log("Email sent"),!0))).catch((e=>(console.log(e),!1)))}printMsg(){console.log(this.msg)}}},818:(e,s,t)=>{const r=t(302),a=t(432),i=t(741),o=(t(113),t(344));e.exports=new class{constructor(){this.user="",this.secretKey="a5638a895ab58685bdd260cd531437e603c17c48bba1b57963881fc09012c6ad6fbd31383bdb9cec454b8c37d52aea8ffb47a3336004e716d329d429d1f17502"}async checkUser({email:e,password:s}){const t=await this.isUserReg(e),r=await this.isPassCorrect(s);return!(!t||!r)}async generateToken(e){const{uuid:s,email:t}=this.user.dataValues,r={user:{uuid:s,email:t}};return o.sign(r,this.secretKey,{expiresIn:"3m"})}async verifyToken(e){try{return o.verify(e,this.secretKey),!0}catch(e){return console.log(e),!1}}async registerUser(e,s){const t=await this.getHashPass(s),a=await r.create(e,t);return!!a&&(i.setMsgInfo(a.dataValues.uuid,e),!0)}async validateUser(e,s){try{const t=await this.isUserReg(s),r=this.isUUIDCorrect(e),a=this.isValidTrue();return!(!r||!t||a)&&!!this.updateValidUser()}catch(e){console.log(e)}}async updateValidUser(){return!!await r.validate(this.user)}async getHashPass(e){return await a.hash(e,10)}async isUserReg(e){return this.user=await r.getByEmail(e),!!this.user}isUUIDCorrect({uuid:e}){return this.user.dataValues.uuid===e}async isPassCorrect(e){try{return await a.compare(e,this.user.dataValues.password_hash)}catch(e){return console.log(e),!1}}isValidTrue(){return!!this.user.dataValues.validated}}},524:e=>{function s(e){var s=new Error("Cannot find module '"+e+"'");throw s.code="MODULE_NOT_FOUND",s}s.keys=()=>[],s.resolve=s,s.id=524,e.exports=s},139:e=>{"use strict";e.exports=require("@sendgrid/mail")},432:e=>{"use strict";e.exports=require("bcryptjs")},710:e=>{"use strict";e.exports=require("cookie-parser")},142:e=>{"use strict";e.exports=require("dotenv")},860:e=>{"use strict";e.exports=require("express")},10:e=>{"use strict";e.exports=require("http-status-codes")},344:e=>{"use strict";e.exports=require("jsonwebtoken")},496:e=>{"use strict";e.exports=require("sequelize")},113:e=>{"use strict";e.exports=require("crypto")},147:e=>{"use strict";e.exports=require("fs")},17:e=>{"use strict";e.exports=require("path")},986:e=>{"use strict";e.exports=JSON.parse('{"development":{"username":"postgres","password":"5noSRIdmm@","database":"usuarios","host":"127.0.0.1","dialect":"postgres"}}')}},s={};function t(r){var a=s[r];if(void 0!==a)return a.exports;var i=s[r]={exports:{}};return e[r](i,i.exports,t),i.exports}t.o=(e,s)=>Object.prototype.hasOwnProperty.call(e,s),(()=>{const e=t(790),{sequelize:s}=t(44),r=8080|process.env.PORT;e.listen(r,(async()=>{console.log(`Server listening at http://localhost:${r}`),await s.authenticate(),console.log("Database connected!")}))})()})();